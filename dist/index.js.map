{"mappings":"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","sources":["./src/utils.js","./src/popup-window.js","./src/oauth-uri.js","./src/use-social-login.js"],"sourcesContent":["export function toParams(query) {\n    const q = query.replace(/^\\??\\//, '');\n\n    return q.split('&').reduce((values, param) => {\n        const [key, value] = param.split('=');\n        values[key] = value;\n        return values;\n    }, {});\n}\n\nexport function toQuery(params, delimiter = '&') {\n    const keys = Object.keys(params);\n\n    return keys.reduce((str, key, index) => {\n        let query = `${str}${key}=${params[key]}`;\n\n        if (index < keys.length - 1) {\n            query += delimiter;\n        }\n\n        return query;\n    }, '');\n}\n\nexport const getPopupPositionProperties = ({ width = 600, height = 600 }) => {\n    const left = screen.width / 2 - width / 2;\n    const top = screen.height / 2 - height / 2;\n    return `left=${left},top=${top},width=${width},height=${height}`;\n};\n\nexport const generateRandomString = (length = 20) => {\n    let result = '';\n    let characters =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n\n    return result;\n};\n","import { toParams, getPopupPositionProperties } from './utils';\r\n\r\nexport class PopupWindow {\r\n    constructor(id, url, options = {}) {\r\n        this.id = id;\r\n        this.url = url;\r\n        this.options = options;\r\n    }\r\n\r\n    open() {\r\n        const { url, id, options } = this;\r\n        this.window = window.open(url, id, getPopupPositionProperties(options));\r\n    }\r\n\r\n    close() {\r\n        this.cancel();\r\n        this.window.close();\r\n    }\r\n\r\n    poll() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this._iid = window.setInterval(() => {\r\n                try {\r\n                    const popup = this.window;\r\n\r\n                    if (!popup || popup.closed !== false) {\r\n                        this.close();\r\n\r\n                        reject(new Error('The popup was closed'));\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (\r\n                        popup.location.href === this.url ||\r\n                        popup.location.pathname === 'blank'\r\n                    ) {\r\n                        return;\r\n                    }\r\n\r\n                    const params = toParams(\r\n                        popup.location.search.replace(/^\\?/, '')\r\n                    );\r\n\r\n                    resolve(params);\r\n\r\n                    this.close();\r\n                } catch (error) {\r\n                    /*\r\n                     * Ignore DOMException: Blocked a frame with origin from accessing a\r\n                     * cross-origin frame.\r\n                     */\r\n                }\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        if (this._iid) {\r\n            window.clearInterval(this._iid);\r\n            this._iid = null;\r\n        }\r\n    }\r\n\r\n    then(...args) {\r\n        return this.promise.then(...args);\r\n    }\r\n\r\n    catch(...args) {\r\n        return this.promise.then(...args);\r\n    }\r\n\r\n    static open(...args) {\r\n        const popup = new this(...args);\r\n\r\n        popup.open();\r\n        popup.poll();\r\n\r\n        return popup;\r\n    }\r\n}\r\n","import { toQuery } from './utils';\r\n\r\nexport const GITHUB_OAUTH_URI = 'https://github.com/login/oauth/authorize';\r\nexport const LINKEDIN_OAUTH_URI =\r\n    'https://www.linkedin.com/oauth/v2/authorization';\r\nexport const GOOGLE_OAUTH_URI = 'https://accounts.google.com/o/oauth2/v2/auth';\r\nexport const FACEBOOK_OAUTH_URI = 'https://www.facebook.com/v10.0/dialog/oauth';\r\n\r\nexport const getFacebookUri = ({\r\n    scope = 'public_profile,email',\r\n    clientId,\r\n    redirectUri = '',\r\n    state,\r\n}) => {\r\n    const search = toQuery({\r\n        display: 'popup',\r\n        client_id: clientId,\r\n        scope,\r\n        redirect_uri: redirectUri,\r\n        state: state,\r\n    });\r\n\r\n    return `${FACEBOOK_OAUTH_URI}?${search}`;\r\n};\r\n\r\nexport const getGithubUri = ({\r\n    scope = 'user:email',\r\n    clientId,\r\n    redirectUri = '',\r\n    state,\r\n}) => {\r\n    const search = toQuery({\r\n        client_id: clientId,\r\n        scope,\r\n        redirect_uri: redirectUri,\r\n        state: state,\r\n    });\r\n\r\n    return `${GITHUB_OAUTH_URI}?${search}`;\r\n};\r\n\r\nexport const getGoogleUri = ({\r\n    scope = 'userinfo.profile',\r\n    clientId,\r\n    redirectUri = '',\r\n    state,\r\n}) => {\r\n    const search = toQuery({\r\n        include_granted_scopes: true,\r\n        response_type: 'code',\r\n        access_type: 'offline',\r\n        client_id: clientId,\r\n        scope: `https://www.googleapis.com/auth/${scope}`,\r\n        redirect_uri: redirectUri,\r\n        state: state,\r\n    });\r\n\r\n    return `${GOOGLE_OAUTH_URI}?${search}`;\r\n};\r\n\r\nexport const getLinkedInUri = ({\r\n    scope = 'r_emailaddress',\r\n    clientId,\r\n    redirectUri = '',\r\n    state,\r\n}) => {\r\n    const search = toQuery({\r\n        response_type: 'code',\r\n        client_id: clientId,\r\n        scope: encodeURI(scope),\r\n        redirect_uri: redirectUri,\r\n        state: state,\r\n    });\r\n\r\n    return `${LINKEDIN_OAUTH_URI}?${search}`;\r\n};\r\n\r\nexport const SocialUriTypes = {\r\n    github: getGithubUri,\r\n    google: getGoogleUri,\r\n    facebook: getFacebookUri,\r\n    linkedin: getLinkedInUri,\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { PopupWindow } from './popup-window';\r\nimport { generateRandomString } from './utils';\r\nimport { SocialUriTypes } from './oauth-uri';\r\n\r\nexport const useSocialLogin = ({\r\n    provider,\r\n\r\n    scope,\r\n    clientId,\r\n    redirectUri,\r\n\r\n    onRequest = () => {},\r\n    onSuccess = () => {},\r\n    onFailure = () => {},\r\n}) => {\r\n    const [state, setState] = useState(generateRandomString());\r\n\r\n    const getUri = SocialUriTypes[provider];\r\n\r\n    const _handleSuccess = (data) => {\r\n        if (!data.code) {\r\n            return onFailure(new Error(\"'code' not found\"));\r\n        }\r\n\r\n        if (data.state !== state) {\r\n            return onFailure(new Error(\"'state' not equal\"));\r\n        }\r\n\r\n        setState(generateRandomString());\r\n\r\n        onSuccess(data);\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        const popup = PopupWindow.open(\r\n            `${provider}-oauth-authorize`,\r\n            getUri({\r\n                scope,\r\n                clientId,\r\n                redirectUri,\r\n                state: state,\r\n            }),\r\n            {\r\n                height: 750,\r\n                width: 600,\r\n            }\r\n        );\r\n\r\n        onRequest();\r\n\r\n        popup.then(_handleSuccess, onFailure);\r\n    };\r\n\r\n    return handleLogin;\r\n};\r\n"],"names":["query","replace","split","reduce","values","param","_param$split2","_param$split","key","value","params","delimiter","keys","Object","str","index","length","_ref","width","_ref$width","_ref$height","height","left","screen","top","result","characters","charactersLength","i","charAt","Math","floor","random","$404803844363887f977269fe72bd55c9$var$PopupWindow","PopupWindow","id","url","options","this","args","popup","open","poll","window","cancel","close","promise","Promise","resolve","reject","_this","_iid","setInterval","closed","Error","location","href","pathname","search","error","clearInterval","then","$6e3a512e22dcaf09885e5d9aba94a0e7$var$getFacebookUri","scope","_ref$scope","clientId","redirectUri","_ref$redirectUri","state","display","client_id","redirect_uri","$6e3a512e22dcaf09885e5d9aba94a0e7$var$FACEBOOK_OAUTH_URI","$6e3a512e22dcaf09885e5d9aba94a0e7$var$getGithubUri","_ref2","_ref2$scope","_ref2$redirectUri","$6e3a512e22dcaf09885e5d9aba94a0e7$var$GITHUB_OAUTH_URI","$6e3a512e22dcaf09885e5d9aba94a0e7$var$getGoogleUri","_ref3","_ref3$scope","_ref3$redirectUri","include_granted_scopes","response_type","access_type","$6e3a512e22dcaf09885e5d9aba94a0e7$var$GOOGLE_OAUTH_URI","$6e3a512e22dcaf09885e5d9aba94a0e7$var$getLinkedInUri","_ref4","_ref4$scope","_ref4$redirectUri","encodeURI","$6e3a512e22dcaf09885e5d9aba94a0e7$var$LINKEDIN_OAUTH_URI","$6e3a512e22dcaf09885e5d9aba94a0e7$var$SocialUriTypes","github","google","facebook","linkedin","provider","onRequest","_ref$onRequest","_ref$onSuccess","onSuccess","_ref$onFailure","onFailure","setState","getUri","_handleSuccess","data","code"],"version":3,"file":"index.js.map"}